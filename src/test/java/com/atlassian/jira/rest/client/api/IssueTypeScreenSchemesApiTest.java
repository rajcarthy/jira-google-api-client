/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.rest.client.api;

import com.atlassian.jira.rest.client.model.IssueTypeIds;
import com.atlassian.jira.rest.client.model.IssueTypeScreenSchemeDetails;
import com.atlassian.jira.rest.client.model.IssueTypeScreenSchemeId;
import com.atlassian.jira.rest.client.model.IssueTypeScreenSchemeMappingDetails;
import com.atlassian.jira.rest.client.model.IssueTypeScreenSchemeProjectAssociation;
import com.atlassian.jira.rest.client.model.IssueTypeScreenSchemeUpdateDetails;
import com.atlassian.jira.rest.client.model.PageBeanIssueTypeScreenScheme;
import com.atlassian.jira.rest.client.model.PageBeanIssueTypeScreenSchemeItem;
import com.atlassian.jira.rest.client.model.PageBeanIssueTypeScreenSchemesProjects;
import java.util.Set;
import com.atlassian.jira.rest.client.model.UpdateDefaultScreenScheme;
import org.junit.Test;
import org.junit.Ignore;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IssueTypeScreenSchemesApi
 */
@Ignore
public class IssueTypeScreenSchemesApiTest {

    private final IssueTypeScreenSchemesApi api = new IssueTypeScreenSchemesApi();

    
    /**
     * Append mappings to issue type screen scheme
     *
     * Appends issue type to screen scheme mappings to an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void appendMappingsForIssueTypeScreenSchemeTest() throws IOException {
        String issueTypeScreenSchemeId = null;
        IssueTypeScreenSchemeMappingDetails issueTypeScreenSchemeMappingDetails = null;
        Object response = api.appendMappingsForIssueTypeScreenScheme(issueTypeScreenSchemeId, issueTypeScreenSchemeMappingDetails);

        // TODO: test validations
    }
    
    /**
     * Assign issue type screen scheme to project
     *
     * Assigns an issue type screen scheme to a project.  Issue type screen schemes can only be assigned to classic projects.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void assignIssueTypeScreenSchemeToProjectTest() throws IOException {
        IssueTypeScreenSchemeProjectAssociation issueTypeScreenSchemeProjectAssociation = null;
        Object response = api.assignIssueTypeScreenSchemeToProject(issueTypeScreenSchemeProjectAssociation);

        // TODO: test validations
    }
    
    /**
     * Create issue type screen scheme
     *
     * Creates an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void createIssueTypeScreenSchemeTest() throws IOException {
        IssueTypeScreenSchemeDetails issueTypeScreenSchemeDetails = null;
        IssueTypeScreenSchemeId response = api.createIssueTypeScreenScheme(issueTypeScreenSchemeDetails);

        // TODO: test validations
    }
    
    /**
     * Delete issue type screen scheme
     *
     * Deletes an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void deleteIssueTypeScreenSchemeTest() throws IOException {
        String issueTypeScreenSchemeId = null;
        Object response = api.deleteIssueTypeScreenScheme(issueTypeScreenSchemeId);

        // TODO: test validations
    }
    
    /**
     * Get issue type screen scheme items
     *
     * Returns a [paginated](#pagination) list of issue type screen scheme items.  Only issue type screen schemes used in classic projects are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void getIssueTypeScreenSchemeMappingsTest() throws IOException {
        Long startAt = null;
        Integer maxResults = null;
        Set<Long> issueTypeScreenSchemeId = null;
        PageBeanIssueTypeScreenSchemeItem response = api.getIssueTypeScreenSchemeMappings(startAt, maxResults, issueTypeScreenSchemeId);

        // TODO: test validations
    }
    
    /**
     * Get issue type screen schemes for projects
     *
     * Returns a [paginated](#pagination) list of issue type screen schemes and, for each issue type screen scheme, a list of the projects that use it.  Only issue type screen schemes used in classic projects are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void getIssueTypeScreenSchemeProjectAssociationsTest() throws IOException {
        Set<Long> projectId = null;
        Long startAt = null;
        Integer maxResults = null;
        PageBeanIssueTypeScreenSchemesProjects response = api.getIssueTypeScreenSchemeProjectAssociations(projectId, startAt, maxResults);

        // TODO: test validations
    }
    
    /**
     * Get issue type screen schemes
     *
     * Returns a [paginated](#pagination) list of issue type screen schemes.  Only issue type screen schemes used in classic projects are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void getIssueTypeScreenSchemesTest() throws IOException {
        Long startAt = null;
        Integer maxResults = null;
        Set<Long> id = null;
        PageBeanIssueTypeScreenScheme response = api.getIssueTypeScreenSchemes(startAt, maxResults, id);

        // TODO: test validations
    }
    
    /**
     * Remove mappings from issue type screen scheme
     *
     * Removes issue type to screen scheme mappings from an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void removeMappingsFromIssueTypeScreenSchemeTest() throws IOException {
        String issueTypeScreenSchemeId = null;
        IssueTypeIds issueTypeIds = null;
        Object response = api.removeMappingsFromIssueTypeScreenScheme(issueTypeScreenSchemeId, issueTypeIds);

        // TODO: test validations
    }
    
    /**
     * Update issue type screen scheme default screen scheme
     *
     * Updates the default screen scheme of an issue type screen scheme. The default screen scheme is used for all unmapped issue types.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void updateDefaultScreenSchemeTest() throws IOException {
        String issueTypeScreenSchemeId = null;
        UpdateDefaultScreenScheme updateDefaultScreenScheme = null;
        Object response = api.updateDefaultScreenScheme(issueTypeScreenSchemeId, updateDefaultScreenScheme);

        // TODO: test validations
    }
    
    /**
     * Update issue type screen scheme
     *
     * Updates an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void updateIssueTypeScreenSchemeTest() throws IOException {
        String issueTypeScreenSchemeId = null;
        IssueTypeScreenSchemeUpdateDetails issueTypeScreenSchemeUpdateDetails = null;
        Object response = api.updateIssueTypeScreenScheme(issueTypeScreenSchemeId, issueTypeScreenSchemeUpdateDetails);

        // TODO: test validations
    }
    
}
