/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.atlassian.jira.rest.client.model.FilterSubscription;
import com.atlassian.jira.rest.client.model.SharePermission;
import com.atlassian.jira.rest.client.model.User;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Details of a filter.
 */
@ApiModel(description = "Details of a filter.")
@JsonPropertyOrder({
  FilterDetails.JSON_PROPERTY_SELF,
  FilterDetails.JSON_PROPERTY_ID,
  FilterDetails.JSON_PROPERTY_NAME,
  FilterDetails.JSON_PROPERTY_DESCRIPTION,
  FilterDetails.JSON_PROPERTY_OWNER,
  FilterDetails.JSON_PROPERTY_JQL,
  FilterDetails.JSON_PROPERTY_VIEW_URL,
  FilterDetails.JSON_PROPERTY_SEARCH_URL,
  FilterDetails.JSON_PROPERTY_FAVOURITE,
  FilterDetails.JSON_PROPERTY_FAVOURITED_COUNT,
  FilterDetails.JSON_PROPERTY_SHARE_PERMISSIONS,
  FilterDetails.JSON_PROPERTY_SUBSCRIPTIONS
})
@JsonTypeName("FilterDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-31T17:44:39.790417-08:00[America/Los_Angeles]")
public class FilterDetails {
  public static final String JSON_PROPERTY_SELF = "self";
  private URI self;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private User owner = null;

  public static final String JSON_PROPERTY_JQL = "jql";
  private String jql;

  public static final String JSON_PROPERTY_VIEW_URL = "viewUrl";
  private URI viewUrl;

  public static final String JSON_PROPERTY_SEARCH_URL = "searchUrl";
  private URI searchUrl;

  public static final String JSON_PROPERTY_FAVOURITE = "favourite";
  private Boolean favourite;

  public static final String JSON_PROPERTY_FAVOURITED_COUNT = "favouritedCount";
  private Long favouritedCount;

  public static final String JSON_PROPERTY_SHARE_PERMISSIONS = "sharePermissions";
  private List<SharePermission> sharePermissions = null;

  public static final String JSON_PROPERTY_SUBSCRIPTIONS = "subscriptions";
  private List<FilterSubscription> subscriptions = null;


   /**
   * The URL of the filter.
   * @return self
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of the filter.")
  @JsonProperty(JSON_PROPERTY_SELF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getSelf() {
    return self;
  }




   /**
   * The unique identifier for the filter.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier for the filter.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




  public FilterDetails name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the filter. Must be unique.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the filter. Must be unique.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public FilterDetails description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the filter.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of the filter.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


   /**
   * The user who owns the filter. This is defaulted to the creator of the filter, however Jira administrators can change the owner of a shared filter in the admin settings.
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user who owns the filter. This is defaulted to the creator of the filter, however Jira administrators can change the owner of a shared filter in the admin settings.")
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getOwner() {
    return owner;
  }




   /**
   * The JQL query for the filter. For example, *project &#x3D; SSP AND issuetype &#x3D; Bug*.
   * @return jql
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.")
  @JsonProperty(JSON_PROPERTY_JQL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJql() {
    return jql;
  }




   /**
   * A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter&#x3D;10100*.
   * @return viewUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.")
  @JsonProperty(JSON_PROPERTY_VIEW_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getViewUrl() {
    return viewUrl;
  }




   /**
   * A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter&#39;s JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql&#x3D;project+%3D+SSP+AND+issuetype+%3D+Bug*.
   * @return searchUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.")
  @JsonProperty(JSON_PROPERTY_SEARCH_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getSearchUrl() {
    return searchUrl;
  }




   /**
   * Whether the filter is selected as a favorite by any users, not including the filter owner.
   * @return favourite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the filter is selected as a favorite by any users, not including the filter owner.")
  @JsonProperty(JSON_PROPERTY_FAVOURITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFavourite() {
    return favourite;
  }




   /**
   * The count of how many users have selected this filter as a favorite, including the filter owner.
   * @return favouritedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The count of how many users have selected this filter as a favorite, including the filter owner.")
  @JsonProperty(JSON_PROPERTY_FAVOURITED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFavouritedCount() {
    return favouritedCount;
  }




  public FilterDetails sharePermissions(List<SharePermission> sharePermissions) {
    
    this.sharePermissions = sharePermissions;
    return this;
  }

  public FilterDetails addSharePermissionsItem(SharePermission sharePermissionsItem) {
    if (this.sharePermissions == null) {
      this.sharePermissions = new ArrayList<>();
    }
    this.sharePermissions.add(sharePermissionsItem);
    return this;
  }

   /**
   * The groups and projects that the filter is shared with. This can be specified when updating a filter, but not when creating a filter.
   * @return sharePermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The groups and projects that the filter is shared with. This can be specified when updating a filter, but not when creating a filter.")
  @JsonProperty(JSON_PROPERTY_SHARE_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SharePermission> getSharePermissions() {
    return sharePermissions;
  }


  public void setSharePermissions(List<SharePermission> sharePermissions) {
    this.sharePermissions = sharePermissions;
  }


   /**
   * The users that are subscribed to the filter.
   * @return subscriptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The users that are subscribed to the filter.")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FilterSubscription> getSubscriptions() {
    return subscriptions;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterDetails filterDetails = (FilterDetails) o;
    return Objects.equals(this.self, filterDetails.self) &&
        Objects.equals(this.id, filterDetails.id) &&
        Objects.equals(this.name, filterDetails.name) &&
        Objects.equals(this.description, filterDetails.description) &&
        Objects.equals(this.owner, filterDetails.owner) &&
        Objects.equals(this.jql, filterDetails.jql) &&
        Objects.equals(this.viewUrl, filterDetails.viewUrl) &&
        Objects.equals(this.searchUrl, filterDetails.searchUrl) &&
        Objects.equals(this.favourite, filterDetails.favourite) &&
        Objects.equals(this.favouritedCount, filterDetails.favouritedCount) &&
        Objects.equals(this.sharePermissions, filterDetails.sharePermissions) &&
        Objects.equals(this.subscriptions, filterDetails.subscriptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, id, name, description, owner, jql, viewUrl, searchUrl, favourite, favouritedCount, sharePermissions, subscriptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterDetails {\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    jql: ").append(toIndentedString(jql)).append("\n");
    sb.append("    viewUrl: ").append(toIndentedString(viewUrl)).append("\n");
    sb.append("    searchUrl: ").append(toIndentedString(searchUrl)).append("\n");
    sb.append("    favourite: ").append(toIndentedString(favourite)).append("\n");
    sb.append("    favouritedCount: ").append(toIndentedString(favouritedCount)).append("\n");
    sb.append("    sharePermissions: ").append(toIndentedString(sharePermissions)).append("\n");
    sb.append("    subscriptions: ").append(toIndentedString(subscriptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

