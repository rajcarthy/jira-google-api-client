/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.atlassian.jira.rest.client.model.JiraExpressionComplexity;
import com.atlassian.jira.rest.client.model.JiraExpressionValidationError;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Details about the analysed Jira expression.
 */
@ApiModel(description = "Details about the analysed Jira expression.")
@JsonPropertyOrder({
  JiraExpressionAnalysis.JSON_PROPERTY_EXPRESSION,
  JiraExpressionAnalysis.JSON_PROPERTY_ERRORS,
  JiraExpressionAnalysis.JSON_PROPERTY_VALID,
  JiraExpressionAnalysis.JSON_PROPERTY_TYPE,
  JiraExpressionAnalysis.JSON_PROPERTY_COMPLEXITY
})
@JsonTypeName("JiraExpressionAnalysis")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-31T17:44:39.790417-08:00[America/Los_Angeles]")
public class JiraExpressionAnalysis {
  public static final String JSON_PROPERTY_EXPRESSION = "expression";
  private String expression;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private List<JiraExpressionValidationError> errors = null;

  public static final String JSON_PROPERTY_VALID = "valid";
  private Boolean valid;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_COMPLEXITY = "complexity";
  private JiraExpressionComplexity complexity;


  public JiraExpressionAnalysis expression(String expression) {
    
    this.expression = expression;
    return this;
  }

   /**
   * The analysed expression.
   * @return expression
  **/
  @ApiModelProperty(required = true, value = "The analysed expression.")
  @JsonProperty(JSON_PROPERTY_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExpression() {
    return expression;
  }


  public void setExpression(String expression) {
    this.expression = expression;
  }


  public JiraExpressionAnalysis errors(List<JiraExpressionValidationError> errors) {
    
    this.errors = errors;
    return this;
  }

  public JiraExpressionAnalysis addErrorsItem(JiraExpressionValidationError errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * A list of validation errors. Not included if the expression is valid.
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of validation errors. Not included if the expression is valid.")
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<JiraExpressionValidationError> getErrors() {
    return errors;
  }


  public void setErrors(List<JiraExpressionValidationError> errors) {
    this.errors = errors;
  }


  public JiraExpressionAnalysis valid(Boolean valid) {
    
    this.valid = valid;
    return this;
  }

   /**
   * Whether the expression is valid and the interpreter will evaluate it. Note that the expression may fail at runtime (for example, if it executes too many expensive operations).
   * @return valid
  **/
  @ApiModelProperty(required = true, value = "Whether the expression is valid and the interpreter will evaluate it. Note that the expression may fail at runtime (for example, if it executes too many expensive operations).")
  @JsonProperty(JSON_PROPERTY_VALID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getValid() {
    return valid;
  }


  public void setValid(Boolean valid) {
    this.valid = valid;
  }


  public JiraExpressionAnalysis type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * EXPERIMENTAL. The inferred type of the expression.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EXPERIMENTAL. The inferred type of the expression.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public JiraExpressionAnalysis complexity(JiraExpressionComplexity complexity) {
    
    this.complexity = complexity;
    return this;
  }

   /**
   * Get complexity
   * @return complexity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPLEXITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JiraExpressionComplexity getComplexity() {
    return complexity;
  }


  public void setComplexity(JiraExpressionComplexity complexity) {
    this.complexity = complexity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JiraExpressionAnalysis jiraExpressionAnalysis = (JiraExpressionAnalysis) o;
    return Objects.equals(this.expression, jiraExpressionAnalysis.expression) &&
        Objects.equals(this.errors, jiraExpressionAnalysis.errors) &&
        Objects.equals(this.valid, jiraExpressionAnalysis.valid) &&
        Objects.equals(this.type, jiraExpressionAnalysis.type) &&
        Objects.equals(this.complexity, jiraExpressionAnalysis.complexity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expression, errors, valid, type, complexity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JiraExpressionAnalysis {\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    complexity: ").append(toIndentedString(complexity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

