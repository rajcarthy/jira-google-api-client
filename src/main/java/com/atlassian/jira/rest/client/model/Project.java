/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.atlassian.jira.rest.client.model.AvatarUrlsBean;
import com.atlassian.jira.rest.client.model.Component;
import com.atlassian.jira.rest.client.model.Hierarchy;
import com.atlassian.jira.rest.client.model.IssueTypeDetails;
import com.atlassian.jira.rest.client.model.ProjectCategory;
import com.atlassian.jira.rest.client.model.ProjectInsight;
import com.atlassian.jira.rest.client.model.ProjectPermissions;
import com.atlassian.jira.rest.client.model.User;
import com.atlassian.jira.rest.client.model.Version;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Details about a project.
 */
@ApiModel(description = "Details about a project.")
@JsonPropertyOrder({
  Project.JSON_PROPERTY_EXPAND,
  Project.JSON_PROPERTY_SELF,
  Project.JSON_PROPERTY_ID,
  Project.JSON_PROPERTY_KEY,
  Project.JSON_PROPERTY_DESCRIPTION,
  Project.JSON_PROPERTY_LEAD,
  Project.JSON_PROPERTY_COMPONENTS,
  Project.JSON_PROPERTY_ISSUE_TYPES,
  Project.JSON_PROPERTY_URL,
  Project.JSON_PROPERTY_EMAIL,
  Project.JSON_PROPERTY_ASSIGNEE_TYPE,
  Project.JSON_PROPERTY_VERSIONS,
  Project.JSON_PROPERTY_NAME,
  Project.JSON_PROPERTY_ROLES,
  Project.JSON_PROPERTY_AVATAR_URLS,
  Project.JSON_PROPERTY_PROJECT_CATEGORY,
  Project.JSON_PROPERTY_PROJECT_TYPE_KEY,
  Project.JSON_PROPERTY_SIMPLIFIED,
  Project.JSON_PROPERTY_STYLE,
  Project.JSON_PROPERTY_FAVOURITE,
  Project.JSON_PROPERTY_IS_PRIVATE,
  Project.JSON_PROPERTY_ISSUE_TYPE_HIERARCHY,
  Project.JSON_PROPERTY_PERMISSIONS,
  Project.JSON_PROPERTY_PROPERTIES,
  Project.JSON_PROPERTY_UUID,
  Project.JSON_PROPERTY_INSIGHT,
  Project.JSON_PROPERTY_DELETED,
  Project.JSON_PROPERTY_RETENTION_TILL_DATE,
  Project.JSON_PROPERTY_DELETED_DATE,
  Project.JSON_PROPERTY_DELETED_BY,
  Project.JSON_PROPERTY_ARCHIVED,
  Project.JSON_PROPERTY_ARCHIVED_DATE,
  Project.JSON_PROPERTY_ARCHIVED_BY
})
@JsonTypeName("Project")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-31T17:44:39.790417-08:00[America/Los_Angeles]")
public class Project {
  public static final String JSON_PROPERTY_EXPAND = "expand";
  private String expand;

  public static final String JSON_PROPERTY_SELF = "self";
  private URI self;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LEAD = "lead";
  private User lead = null;

  public static final String JSON_PROPERTY_COMPONENTS = "components";
  private List<Component> components = null;

  public static final String JSON_PROPERTY_ISSUE_TYPES = "issueTypes";
  private List<IssueTypeDetails> issueTypes = null;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  /**
   * The default assignee when creating issues for this project.
   */
  public enum AssigneeTypeEnum {
    PROJECT_LEAD("PROJECT_LEAD"),
    
    UNASSIGNED("UNASSIGNED");

    private String value;

    AssigneeTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AssigneeTypeEnum fromValue(String value) {
      for (AssigneeTypeEnum b : AssigneeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ASSIGNEE_TYPE = "assigneeType";
  private AssigneeTypeEnum assigneeType;

  public static final String JSON_PROPERTY_VERSIONS = "versions";
  private List<Version> versions = null;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ROLES = "roles";
  private Map<String, URI> roles = null;

  public static final String JSON_PROPERTY_AVATAR_URLS = "avatarUrls";
  private AvatarUrlsBean avatarUrls = null;

  public static final String JSON_PROPERTY_PROJECT_CATEGORY = "projectCategory";
  private ProjectCategory projectCategory = null;

  /**
   * The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.
   */
  public enum ProjectTypeKeyEnum {
    SOFTWARE("software"),
    
    SERVICE_DESK("service_desk"),
    
    BUSINESS("business");

    private String value;

    ProjectTypeKeyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProjectTypeKeyEnum fromValue(String value) {
      for (ProjectTypeKeyEnum b : ProjectTypeKeyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PROJECT_TYPE_KEY = "projectTypeKey";
  private ProjectTypeKeyEnum projectTypeKey;

  public static final String JSON_PROPERTY_SIMPLIFIED = "simplified";
  private Boolean simplified;

  /**
   * The type of the project.
   */
  public enum StyleEnum {
    CLASSIC("classic"),
    
    NEXT_GEN("next-gen");

    private String value;

    StyleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StyleEnum fromValue(String value) {
      for (StyleEnum b : StyleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STYLE = "style";
  private StyleEnum style;

  public static final String JSON_PROPERTY_FAVOURITE = "favourite";
  private Boolean favourite;

  public static final String JSON_PROPERTY_IS_PRIVATE = "isPrivate";
  private Boolean isPrivate;

  public static final String JSON_PROPERTY_ISSUE_TYPE_HIERARCHY = "issueTypeHierarchy";
  private Hierarchy issueTypeHierarchy = null;

  public static final String JSON_PROPERTY_PERMISSIONS = "permissions";
  private ProjectPermissions permissions = null;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Map<String, Object> properties = null;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  public static final String JSON_PROPERTY_INSIGHT = "insight";
  private ProjectInsight insight = null;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  private Boolean deleted;

  public static final String JSON_PROPERTY_RETENTION_TILL_DATE = "retentionTillDate";
  private OffsetDateTime retentionTillDate;

  public static final String JSON_PROPERTY_DELETED_DATE = "deletedDate";
  private OffsetDateTime deletedDate;

  public static final String JSON_PROPERTY_DELETED_BY = "deletedBy";
  private User deletedBy = null;

  public static final String JSON_PROPERTY_ARCHIVED = "archived";
  private Boolean archived;

  public static final String JSON_PROPERTY_ARCHIVED_DATE = "archivedDate";
  private OffsetDateTime archivedDate;

  public static final String JSON_PROPERTY_ARCHIVED_BY = "archivedBy";
  private User archivedBy = null;


   /**
   * Expand options that include additional project details in the response.
   * @return expand
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expand options that include additional project details in the response.")
  @JsonProperty(JSON_PROPERTY_EXPAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpand() {
    return expand;
  }




   /**
   * The URL of the project details.
   * @return self
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of the project details.")
  @JsonProperty(JSON_PROPERTY_SELF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getSelf() {
    return self;
  }




  public Project id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the project.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the project.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


   /**
   * The key of the project.
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key of the project.")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }




   /**
   * A brief description of the project.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A brief description of the project.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }




   /**
   * The username of the project lead.
   * @return lead
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The username of the project lead.")
  @JsonProperty(JSON_PROPERTY_LEAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getLead() {
    return lead;
  }




   /**
   * List of the components contained in the project.
   * @return components
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of the components contained in the project.")
  @JsonProperty(JSON_PROPERTY_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Component> getComponents() {
    return components;
  }




   /**
   * List of the issue types available in the project.
   * @return issueTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of the issue types available in the project.")
  @JsonProperty(JSON_PROPERTY_ISSUE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IssueTypeDetails> getIssueTypes() {
    return issueTypes;
  }




   /**
   * A link to information about this project, such as project documentation.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A link to information about this project, such as project documentation.")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }




  public Project email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * An email address associated with the project.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An email address associated with the project.")
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


   /**
   * The default assignee when creating issues for this project.
   * @return assigneeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The default assignee when creating issues for this project.")
  @JsonProperty(JSON_PROPERTY_ASSIGNEE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AssigneeTypeEnum getAssigneeType() {
    return assigneeType;
  }




   /**
   * The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).
   * @return versions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).")
  @JsonProperty(JSON_PROPERTY_VERSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Version> getVersions() {
    return versions;
  }




   /**
   * The name of the project.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the project.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }




   /**
   * The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).
   * @return roles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).")
  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, URI> getRoles() {
    return roles;
  }




   /**
   * The URLs of the project&#39;s avatars.
   * @return avatarUrls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URLs of the project's avatars.")
  @JsonProperty(JSON_PROPERTY_AVATAR_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AvatarUrlsBean getAvatarUrls() {
    return avatarUrls;
  }




   /**
   * The category the project belongs to.
   * @return projectCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category the project belongs to.")
  @JsonProperty(JSON_PROPERTY_PROJECT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectCategory getProjectCategory() {
    return projectCategory;
  }




   /**
   * The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.
   * @return projectTypeKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.")
  @JsonProperty(JSON_PROPERTY_PROJECT_TYPE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectTypeKeyEnum getProjectTypeKey() {
    return projectTypeKey;
  }




   /**
   * Whether the project is simplified.
   * @return simplified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the project is simplified.")
  @JsonProperty(JSON_PROPERTY_SIMPLIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSimplified() {
    return simplified;
  }




   /**
   * The type of the project.
   * @return style
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the project.")
  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StyleEnum getStyle() {
    return style;
  }




  public Project favourite(Boolean favourite) {
    
    this.favourite = favourite;
    return this;
  }

   /**
   * Whether the project is selected as a favorite.
   * @return favourite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the project is selected as a favorite.")
  @JsonProperty(JSON_PROPERTY_FAVOURITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFavourite() {
    return favourite;
  }


  public void setFavourite(Boolean favourite) {
    this.favourite = favourite;
  }


   /**
   * Whether the project is private.
   * @return isPrivate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the project is private.")
  @JsonProperty(JSON_PROPERTY_IS_PRIVATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsPrivate() {
    return isPrivate;
  }




   /**
   * The issue type hierarchy for the project
   * @return issueTypeHierarchy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The issue type hierarchy for the project")
  @JsonProperty(JSON_PROPERTY_ISSUE_TYPE_HIERARCHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Hierarchy getIssueTypeHierarchy() {
    return issueTypeHierarchy;
  }




   /**
   * User permissions on the project
   * @return permissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User permissions on the project")
  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectPermissions getPermissions() {
    return permissions;
  }




   /**
   * Map of project properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Map of project properties")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getProperties() {
    return properties;
  }




   /**
   * Unique ID for next-gen projects.
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID for next-gen projects.")
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getUuid() {
    return uuid;
  }




   /**
   * Insights about the project.
   * @return insight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Insights about the project.")
  @JsonProperty(JSON_PROPERTY_INSIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectInsight getInsight() {
    return insight;
  }




   /**
   * Whether the project is marked as deleted.
   * @return deleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the project is marked as deleted.")
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeleted() {
    return deleted;
  }




   /**
   * The date when the project is deleted permanently.
   * @return retentionTillDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the project is deleted permanently.")
  @JsonProperty(JSON_PROPERTY_RETENTION_TILL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRetentionTillDate() {
    return retentionTillDate;
  }




   /**
   * The date when the project was marked as deleted.
   * @return deletedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the project was marked as deleted.")
  @JsonProperty(JSON_PROPERTY_DELETED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeletedDate() {
    return deletedDate;
  }




   /**
   * The user who marked the project as deleted.
   * @return deletedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user who marked the project as deleted.")
  @JsonProperty(JSON_PROPERTY_DELETED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getDeletedBy() {
    return deletedBy;
  }




   /**
   * Whether the project is archived.
   * @return archived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the project is archived.")
  @JsonProperty(JSON_PROPERTY_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getArchived() {
    return archived;
  }




   /**
   * The date when the project was archived.
   * @return archivedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the project was archived.")
  @JsonProperty(JSON_PROPERTY_ARCHIVED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getArchivedDate() {
    return archivedDate;
  }




   /**
   * The user who archived the project.
   * @return archivedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user who archived the project.")
  @JsonProperty(JSON_PROPERTY_ARCHIVED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getArchivedBy() {
    return archivedBy;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Project project = (Project) o;
    return Objects.equals(this.expand, project.expand) &&
        Objects.equals(this.self, project.self) &&
        Objects.equals(this.id, project.id) &&
        Objects.equals(this.key, project.key) &&
        Objects.equals(this.description, project.description) &&
        Objects.equals(this.lead, project.lead) &&
        Objects.equals(this.components, project.components) &&
        Objects.equals(this.issueTypes, project.issueTypes) &&
        Objects.equals(this.url, project.url) &&
        Objects.equals(this.email, project.email) &&
        Objects.equals(this.assigneeType, project.assigneeType) &&
        Objects.equals(this.versions, project.versions) &&
        Objects.equals(this.name, project.name) &&
        Objects.equals(this.roles, project.roles) &&
        Objects.equals(this.avatarUrls, project.avatarUrls) &&
        Objects.equals(this.projectCategory, project.projectCategory) &&
        Objects.equals(this.projectTypeKey, project.projectTypeKey) &&
        Objects.equals(this.simplified, project.simplified) &&
        Objects.equals(this.style, project.style) &&
        Objects.equals(this.favourite, project.favourite) &&
        Objects.equals(this.isPrivate, project.isPrivate) &&
        Objects.equals(this.issueTypeHierarchy, project.issueTypeHierarchy) &&
        Objects.equals(this.permissions, project.permissions) &&
        Objects.equals(this.properties, project.properties) &&
        Objects.equals(this.uuid, project.uuid) &&
        Objects.equals(this.insight, project.insight) &&
        Objects.equals(this.deleted, project.deleted) &&
        Objects.equals(this.retentionTillDate, project.retentionTillDate) &&
        Objects.equals(this.deletedDate, project.deletedDate) &&
        Objects.equals(this.deletedBy, project.deletedBy) &&
        Objects.equals(this.archived, project.archived) &&
        Objects.equals(this.archivedDate, project.archivedDate) &&
        Objects.equals(this.archivedBy, project.archivedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expand, self, id, key, description, lead, components, issueTypes, url, email, assigneeType, versions, name, roles, avatarUrls, projectCategory, projectTypeKey, simplified, style, favourite, isPrivate, issueTypeHierarchy, permissions, properties, uuid, insight, deleted, retentionTillDate, deletedDate, deletedBy, archived, archivedDate, archivedBy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Project {\n");
    sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lead: ").append(toIndentedString(lead)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    issueTypes: ").append(toIndentedString(issueTypes)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    assigneeType: ").append(toIndentedString(assigneeType)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    avatarUrls: ").append(toIndentedString(avatarUrls)).append("\n");
    sb.append("    projectCategory: ").append(toIndentedString(projectCategory)).append("\n");
    sb.append("    projectTypeKey: ").append(toIndentedString(projectTypeKey)).append("\n");
    sb.append("    simplified: ").append(toIndentedString(simplified)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    favourite: ").append(toIndentedString(favourite)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("    issueTypeHierarchy: ").append(toIndentedString(issueTypeHierarchy)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    insight: ").append(toIndentedString(insight)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    retentionTillDate: ").append(toIndentedString(retentionTillDate)).append("\n");
    sb.append("    deletedDate: ").append(toIndentedString(deletedDate)).append("\n");
    sb.append("    deletedBy: ").append(toIndentedString(deletedBy)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    archivedDate: ").append(toIndentedString(archivedDate)).append("\n");
    sb.append("    archivedBy: ").append(toIndentedString(archivedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

