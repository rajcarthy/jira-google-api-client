/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.atlassian.jira.rest.client.model.AttachmentArchiveItemReadable;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Metadata for an archive (for example a zip) and its contents.
 */
@ApiModel(description = "Metadata for an archive (for example a zip) and its contents.")
@JsonPropertyOrder({
  AttachmentArchiveMetadataReadable.JSON_PROPERTY_ID,
  AttachmentArchiveMetadataReadable.JSON_PROPERTY_NAME,
  AttachmentArchiveMetadataReadable.JSON_PROPERTY_ENTRIES,
  AttachmentArchiveMetadataReadable.JSON_PROPERTY_TOTAL_ENTRY_COUNT,
  AttachmentArchiveMetadataReadable.JSON_PROPERTY_MEDIA_TYPE
})
@JsonTypeName("AttachmentArchiveMetadataReadable")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-31T17:44:39.790417-08:00[America/Los_Angeles]")
public class AttachmentArchiveMetadataReadable {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ENTRIES = "entries";
  private List<AttachmentArchiveItemReadable> entries = null;

  public static final String JSON_PROPERTY_TOTAL_ENTRY_COUNT = "totalEntryCount";
  private Long totalEntryCount;

  public static final String JSON_PROPERTY_MEDIA_TYPE = "mediaType";
  private String mediaType;


   /**
   * The ID of the attachment.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the attachment.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }




   /**
   * The name of the archive file.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the archive file.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }




   /**
   * The list of the items included in the archive.
   * @return entries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of the items included in the archive.")
  @JsonProperty(JSON_PROPERTY_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AttachmentArchiveItemReadable> getEntries() {
    return entries;
  }




   /**
   * The number of items included in the archive.
   * @return totalEntryCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of items included in the archive.")
  @JsonProperty(JSON_PROPERTY_TOTAL_ENTRY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotalEntryCount() {
    return totalEntryCount;
  }




   /**
   * The MIME type of the attachment.
   * @return mediaType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The MIME type of the attachment.")
  @JsonProperty(JSON_PROPERTY_MEDIA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMediaType() {
    return mediaType;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttachmentArchiveMetadataReadable attachmentArchiveMetadataReadable = (AttachmentArchiveMetadataReadable) o;
    return Objects.equals(this.id, attachmentArchiveMetadataReadable.id) &&
        Objects.equals(this.name, attachmentArchiveMetadataReadable.name) &&
        Objects.equals(this.entries, attachmentArchiveMetadataReadable.entries) &&
        Objects.equals(this.totalEntryCount, attachmentArchiveMetadataReadable.totalEntryCount) &&
        Objects.equals(this.mediaType, attachmentArchiveMetadataReadable.mediaType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, entries, totalEntryCount, mediaType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttachmentArchiveMetadataReadable {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("    totalEntryCount: ").append(toIndentedString(totalEntryCount)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

