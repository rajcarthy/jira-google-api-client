/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Count of a version&#39;s unresolved issues.
 */
@ApiModel(description = "Count of a version's unresolved issues.")
@JsonPropertyOrder({
  VersionUnresolvedIssuesCount.JSON_PROPERTY_SELF,
  VersionUnresolvedIssuesCount.JSON_PROPERTY_ISSUES_UNRESOLVED_COUNT,
  VersionUnresolvedIssuesCount.JSON_PROPERTY_ISSUES_COUNT
})
@JsonTypeName("VersionUnresolvedIssuesCount")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-31T17:44:39.790417-08:00[America/Los_Angeles]")
public class VersionUnresolvedIssuesCount {
  public static final String JSON_PROPERTY_SELF = "self";
  private URI self;

  public static final String JSON_PROPERTY_ISSUES_UNRESOLVED_COUNT = "issuesUnresolvedCount";
  private Long issuesUnresolvedCount;

  public static final String JSON_PROPERTY_ISSUES_COUNT = "issuesCount";
  private Long issuesCount;


   /**
   * The URL of these count details.
   * @return self
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of these count details.")
  @JsonProperty(JSON_PROPERTY_SELF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getSelf() {
    return self;
  }




   /**
   * Count of unresolved issues.
   * @return issuesUnresolvedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of unresolved issues.")
  @JsonProperty(JSON_PROPERTY_ISSUES_UNRESOLVED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getIssuesUnresolvedCount() {
    return issuesUnresolvedCount;
  }




   /**
   * Count of issues.
   * @return issuesCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of issues.")
  @JsonProperty(JSON_PROPERTY_ISSUES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getIssuesCount() {
    return issuesCount;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionUnresolvedIssuesCount versionUnresolvedIssuesCount = (VersionUnresolvedIssuesCount) o;
    return Objects.equals(this.self, versionUnresolvedIssuesCount.self) &&
        Objects.equals(this.issuesUnresolvedCount, versionUnresolvedIssuesCount.issuesUnresolvedCount) &&
        Objects.equals(this.issuesCount, versionUnresolvedIssuesCount.issuesCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, issuesUnresolvedCount, issuesCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionUnresolvedIssuesCount {\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    issuesUnresolvedCount: ").append(toIndentedString(issuesUnresolvedCount)).append("\n");
    sb.append("    issuesCount: ").append(toIndentedString(issuesCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

