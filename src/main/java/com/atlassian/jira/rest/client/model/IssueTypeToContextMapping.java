/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Mapping of an issue type to a context.
 */
@ApiModel(description = "Mapping of an issue type to a context.")
@JsonPropertyOrder({
  IssueTypeToContextMapping.JSON_PROPERTY_CONTEXT_ID,
  IssueTypeToContextMapping.JSON_PROPERTY_ISSUE_TYPE_ID,
  IssueTypeToContextMapping.JSON_PROPERTY_IS_ANY_ISSUE_TYPE
})
@JsonTypeName("IssueTypeToContextMapping")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-31T17:44:39.790417-08:00[America/Los_Angeles]")
public class IssueTypeToContextMapping {
  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_ISSUE_TYPE_ID = "issueTypeId";
  private String issueTypeId;

  public static final String JSON_PROPERTY_IS_ANY_ISSUE_TYPE = "isAnyIssueType";
  private Boolean isAnyIssueType;


  public IssueTypeToContextMapping contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * The ID of the context.
   * @return contextId
  **/
  @ApiModelProperty(required = true, value = "The ID of the context.")
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContextId() {
    return contextId;
  }


  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public IssueTypeToContextMapping issueTypeId(String issueTypeId) {
    
    this.issueTypeId = issueTypeId;
    return this;
  }

   /**
   * The ID of the issue type.
   * @return issueTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the issue type.")
  @JsonProperty(JSON_PROPERTY_ISSUE_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssueTypeId() {
    return issueTypeId;
  }


  public void setIssueTypeId(String issueTypeId) {
    this.issueTypeId = issueTypeId;
  }


  public IssueTypeToContextMapping isAnyIssueType(Boolean isAnyIssueType) {
    
    this.isAnyIssueType = isAnyIssueType;
    return this;
  }

   /**
   * Whether the context is mapped to any issue type.
   * @return isAnyIssueType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the context is mapped to any issue type.")
  @JsonProperty(JSON_PROPERTY_IS_ANY_ISSUE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsAnyIssueType() {
    return isAnyIssueType;
  }


  public void setIsAnyIssueType(Boolean isAnyIssueType) {
    this.isAnyIssueType = isAnyIssueType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueTypeToContextMapping issueTypeToContextMapping = (IssueTypeToContextMapping) o;
    return Objects.equals(this.contextId, issueTypeToContextMapping.contextId) &&
        Objects.equals(this.issueTypeId, issueTypeToContextMapping.issueTypeId) &&
        Objects.equals(this.isAnyIssueType, issueTypeToContextMapping.isAnyIssueType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contextId, issueTypeId, isAnyIssueType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueTypeToContextMapping {\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    issueTypeId: ").append(toIndentedString(issueTypeId)).append("\n");
    sb.append("    isAnyIssueType: ").append(toIndentedString(isAnyIssueType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

