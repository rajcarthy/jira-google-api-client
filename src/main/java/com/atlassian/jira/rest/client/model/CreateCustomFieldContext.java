/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The details of a created custom field context.
 */
@ApiModel(description = "The details of a created custom field context.")
@JsonPropertyOrder({
  CreateCustomFieldContext.JSON_PROPERTY_ID,
  CreateCustomFieldContext.JSON_PROPERTY_NAME,
  CreateCustomFieldContext.JSON_PROPERTY_DESCRIPTION,
  CreateCustomFieldContext.JSON_PROPERTY_PROJECT_IDS,
  CreateCustomFieldContext.JSON_PROPERTY_ISSUE_TYPE_IDS
})
@JsonTypeName("CreateCustomFieldContext")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-31T17:44:39.790417-08:00[America/Los_Angeles]")
public class CreateCustomFieldContext {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_PROJECT_IDS = "projectIds";
  private List<String> projectIds = null;

  public static final String JSON_PROPERTY_ISSUE_TYPE_IDS = "issueTypeIds";
  private List<String> issueTypeIds = null;


   /**
   * The ID of the context.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the context.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




  public CreateCustomFieldContext name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the context.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the context.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateCustomFieldContext description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the context.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the context.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CreateCustomFieldContext projectIds(List<String> projectIds) {
    
    this.projectIds = projectIds;
    return this;
  }

  public CreateCustomFieldContext addProjectIdsItem(String projectIdsItem) {
    if (this.projectIds == null) {
      this.projectIds = new ArrayList<>();
    }
    this.projectIds.add(projectIdsItem);
    return this;
  }

   /**
   * The list of project IDs associated with the context. If the list is empty, the context is global.
   * @return projectIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of project IDs associated with the context. If the list is empty, the context is global.")
  @JsonProperty(JSON_PROPERTY_PROJECT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getProjectIds() {
    return projectIds;
  }


  public void setProjectIds(List<String> projectIds) {
    this.projectIds = projectIds;
  }


  public CreateCustomFieldContext issueTypeIds(List<String> issueTypeIds) {
    
    this.issueTypeIds = issueTypeIds;
    return this;
  }

  public CreateCustomFieldContext addIssueTypeIdsItem(String issueTypeIdsItem) {
    if (this.issueTypeIds == null) {
      this.issueTypeIds = new ArrayList<>();
    }
    this.issueTypeIds.add(issueTypeIdsItem);
    return this;
  }

   /**
   * The list of issue types IDs for the context. If the list is empty, the context refers to all issue types.
   * @return issueTypeIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of issue types IDs for the context. If the list is empty, the context refers to all issue types.")
  @JsonProperty(JSON_PROPERTY_ISSUE_TYPE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getIssueTypeIds() {
    return issueTypeIds;
  }


  public void setIssueTypeIds(List<String> issueTypeIds) {
    this.issueTypeIds = issueTypeIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCustomFieldContext createCustomFieldContext = (CreateCustomFieldContext) o;
    return Objects.equals(this.id, createCustomFieldContext.id) &&
        Objects.equals(this.name, createCustomFieldContext.name) &&
        Objects.equals(this.description, createCustomFieldContext.description) &&
        Objects.equals(this.projectIds, createCustomFieldContext.projectIds) &&
        Objects.equals(this.issueTypeIds, createCustomFieldContext.issueTypeIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, projectIds, issueTypeIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCustomFieldContext {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    projectIds: ").append(toIndentedString(projectIds)).append("\n");
    sb.append("    issueTypeIds: ").append(toIndentedString(issueTypeIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

