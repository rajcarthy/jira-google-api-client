/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.atlassian.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Details of a field that can be used in advanced searches.
 */
@ApiModel(description = "Details of a field that can be used in advanced searches.")
@JsonPropertyOrder({
  FieldReferenceData.JSON_PROPERTY_VALUE,
  FieldReferenceData.JSON_PROPERTY_DISPLAY_NAME,
  FieldReferenceData.JSON_PROPERTY_ORDERABLE,
  FieldReferenceData.JSON_PROPERTY_SEARCHABLE,
  FieldReferenceData.JSON_PROPERTY_AUTO,
  FieldReferenceData.JSON_PROPERTY_CFID,
  FieldReferenceData.JSON_PROPERTY_OPERATORS,
  FieldReferenceData.JSON_PROPERTY_TYPES
})
@JsonTypeName("FieldReferenceData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-31T17:44:39.790417-08:00[America/Los_Angeles]")
public class FieldReferenceData {
  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  /**
   * Whether the field can be used in a query&#39;s &#x60;ORDER BY&#x60; clause.
   */
  public enum OrderableEnum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    OrderableEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderableEnum fromValue(String value) {
      for (OrderableEnum b : OrderableEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ORDERABLE = "orderable";
  private OrderableEnum orderable;

  /**
   * Whether the content of this field can be searched.
   */
  public enum SearchableEnum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    SearchableEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SearchableEnum fromValue(String value) {
      for (SearchableEnum b : SearchableEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SEARCHABLE = "searchable";
  private SearchableEnum searchable;

  /**
   * Whether the field provide auto-complete suggestions.
   */
  public enum AutoEnum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    AutoEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AutoEnum fromValue(String value) {
      for (AutoEnum b : AutoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AUTO = "auto";
  private AutoEnum auto;

  public static final String JSON_PROPERTY_CFID = "cfid";
  private String cfid;

  public static final String JSON_PROPERTY_OPERATORS = "operators";
  private List<String> operators = null;

  public static final String JSON_PROPERTY_TYPES = "types";
  private List<String> types = null;


  public FieldReferenceData value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The field identifier.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The field identifier.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public FieldReferenceData displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name of the field.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display name of the field.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public FieldReferenceData orderable(OrderableEnum orderable) {
    
    this.orderable = orderable;
    return this;
  }

   /**
   * Whether the field can be used in a query&#39;s &#x60;ORDER BY&#x60; clause.
   * @return orderable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the field can be used in a query's `ORDER BY` clause.")
  @JsonProperty(JSON_PROPERTY_ORDERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OrderableEnum getOrderable() {
    return orderable;
  }


  public void setOrderable(OrderableEnum orderable) {
    this.orderable = orderable;
  }


  public FieldReferenceData searchable(SearchableEnum searchable) {
    
    this.searchable = searchable;
    return this;
  }

   /**
   * Whether the content of this field can be searched.
   * @return searchable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the content of this field can be searched.")
  @JsonProperty(JSON_PROPERTY_SEARCHABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SearchableEnum getSearchable() {
    return searchable;
  }


  public void setSearchable(SearchableEnum searchable) {
    this.searchable = searchable;
  }


  public FieldReferenceData auto(AutoEnum auto) {
    
    this.auto = auto;
    return this;
  }

   /**
   * Whether the field provide auto-complete suggestions.
   * @return auto
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the field provide auto-complete suggestions.")
  @JsonProperty(JSON_PROPERTY_AUTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AutoEnum getAuto() {
    return auto;
  }


  public void setAuto(AutoEnum auto) {
    this.auto = auto;
  }


  public FieldReferenceData cfid(String cfid) {
    
    this.cfid = cfid;
    return this;
  }

   /**
   * If the item is a custom field, the ID of the custom field.
   * @return cfid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the item is a custom field, the ID of the custom field.")
  @JsonProperty(JSON_PROPERTY_CFID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCfid() {
    return cfid;
  }


  public void setCfid(String cfid) {
    this.cfid = cfid;
  }


  public FieldReferenceData operators(List<String> operators) {
    
    this.operators = operators;
    return this;
  }

  public FieldReferenceData addOperatorsItem(String operatorsItem) {
    if (this.operators == null) {
      this.operators = new ArrayList<>();
    }
    this.operators.add(operatorsItem);
    return this;
  }

   /**
   * The valid search operators for the field.
   * @return operators
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The valid search operators for the field.")
  @JsonProperty(JSON_PROPERTY_OPERATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getOperators() {
    return operators;
  }


  public void setOperators(List<String> operators) {
    this.operators = operators;
  }


  public FieldReferenceData types(List<String> types) {
    
    this.types = types;
    return this;
  }

  public FieldReferenceData addTypesItem(String typesItem) {
    if (this.types == null) {
      this.types = new ArrayList<>();
    }
    this.types.add(typesItem);
    return this;
  }

   /**
   * The data types of items in the field.
   * @return types
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The data types of items in the field.")
  @JsonProperty(JSON_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTypes() {
    return types;
  }


  public void setTypes(List<String> types) {
    this.types = types;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldReferenceData fieldReferenceData = (FieldReferenceData) o;
    return Objects.equals(this.value, fieldReferenceData.value) &&
        Objects.equals(this.displayName, fieldReferenceData.displayName) &&
        Objects.equals(this.orderable, fieldReferenceData.orderable) &&
        Objects.equals(this.searchable, fieldReferenceData.searchable) &&
        Objects.equals(this.auto, fieldReferenceData.auto) &&
        Objects.equals(this.cfid, fieldReferenceData.cfid) &&
        Objects.equals(this.operators, fieldReferenceData.operators) &&
        Objects.equals(this.types, fieldReferenceData.types);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, displayName, orderable, searchable, auto, cfid, operators, types);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldReferenceData {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    orderable: ").append(toIndentedString(orderable)).append("\n");
    sb.append("    searchable: ").append(toIndentedString(searchable)).append("\n");
    sb.append("    auto: ").append(toIndentedString(auto)).append("\n");
    sb.append("    cfid: ").append(toIndentedString(cfid)).append("\n");
    sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

